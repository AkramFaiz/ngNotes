{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { addListSuccess, getListSuccess } from \"../Actions/list.action\";\nexport const initialState = [{}];\nexport const listReducer = createReducer(initialState, on(getListSuccess, state => [...state]), on(addListSuccess, (state, payload) => [...state, payload]));","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAC/C,SAASC,cAAc,EAAEC,cAAc,QAAQ,wBAAwB;AASvE,OAAO,MAAMC,YAAY,GAAG,CAAC,EAAE,CAAC;AAEhC,OAAO,MAAMC,WAAW,GAAGL,aAAa,CACtCI,YAAY,EACZH,EAAE,CAACE,cAAc,EAAGG,KAAK,IAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,EACzCL,EAAE,CAACC,cAAc,EAAE,CAACI,KAAK,EAAEC,OAAO,KAAK,CAAC,GAAGD,KAAK,EAAEC,OAAO,CAAC,CAAC,CAC5D","names":["createReducer","on","addListSuccess","getListSuccess","initialState","listReducer","state","payload"],"sourceRoot":"","sources":["/Users/mohahmed6/Documents/ng/ngNotes/src/app/Store/Reducers/list.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\";\nimport { addListSuccess, getListSuccess } from \"../Actions/list.action\";\n\nexport interface User {\n  name: string;\n}\nexport interface List {\n  users: ReadonlyArray<User>;\n}\n\nexport const initialState = [{}];\n\nexport const listReducer = createReducer(\n  initialState,\n  on(getListSuccess, (state) => [...state]),\n  on(addListSuccess, (state, payload) => [...state, payload])\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}